@use "mixins";
@use "variables";
@use "functions";

@include mixins.sizing using($prefix) {
    @each $name, $space in variables.$u-spaces {
        @each $prop, $abbrev in (margin: m, padding: p) {
            #{$prefix}#{$abbrev}-#{$name} {
                #{$prop}: functions.important($space);
            }
            #{$prefix}#{$abbrev}t-#{$name} {
                #{$prop}-top: functions.important($space);
            }
            #{$prefix}#{$abbrev}r-#{$name} {
                #{$prop}-right: functions.important($space);
            }
            #{$prefix}#{$abbrev}b-#{$name} {
                #{$prop}-bottom: functions.important($space);
            }
            #{$prefix}#{$abbrev}l-#{$name} {
                #{$prop}-left: functions.important($space);
            }
            #{$prefix}#{$abbrev}y-#{$name} {
                #{$prop}-top: functions.important($space);
                #{$prop}-bottom: functions.important($space);
            }
            #{$prefix}#{$abbrev}x-#{$name} {
                #{$prop}-left: functions.important($space);
                #{$prop}-right: functions.important($space);
            }
        }
    }

    @each $prop, $abbrev in (margin: m, padding: p) {
        #{$prefix}#{$abbrev}-auto {
            #{$prop}: functions.important(auto);
        }
        #{$prefix}#{$abbrev}t-auto {
            #{$prop}-top: functions.important(auto);
        }
        #{$prefix}#{$abbrev}r-auto {
            #{$prop}-right: functions.important(auto);
        }
        #{$prefix}#{$abbrev}b-auto {
            #{$prop}-bottom: functions.important(auto);
        }
        #{$prefix}#{$abbrev}l-auto {
            #{$prop}-left: functions.important(auto);
        }
        #{$prefix}#{$abbrev}y-auto {
            #{$prop}-top: functions.important(auto);
            #{$prop}-bottom: functions.important(auto);
        }
        #{$prefix}#{$abbrev}x-auto {
            #{$prop}-left: functions.important(auto);
            #{$prop}-right: functions.important(auto);
        }
    }
}
